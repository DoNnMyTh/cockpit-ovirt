Vagrant.configure("2") do |config|

  config.vm.provider :libvirt do |libvirt|
    libvirt.management_network_name = ENV['network_name']
    libvirt.management_network_address = ENV['network_address']
  end

  config.vm.synced_folder ENV['nfs_export_path'], "/vagrant", type: "nfs"

  config.vm.define "hosted-engine" do |node|
    node.vm.hostname = "hosted-engine"

    # Define the Vagrant box to use
    config.vm.box = "centos/7"
    # Provider-specific configuration
    node.vm.provider :libvirt do |domain|
      domain.management_network_mac = ENV['hosted_engine_mac'] # Management interface MAC
      domain.memory = ENV['hosted_engine_memory_in_mb']
      domain.cpus = ENV['hosted_engine_cpus']
      domain.cpu_mode = "host-passthrough"
      domain.nested = true
      domain.driver = 'kvm'
    end
  end
  # Disable automatic box update checking
  config.vm.box_check_update = false

end # Vagrant.configure

$script = <<-SCRIPT
sed -i "/$(hostname)/d" /etc/hosts

#yum install http://resources.ovirt.org/pub/yum-repo/ovirt-release43.rpm -y
yum install http://resources.ovirt.org/pub/yum-repo/ovirt-release${ovirt_release}.rpm -y
yum  update -y
yum install ovirt-engine-appliance -y
yum install ovirt-hosted-engine-setup -y
yum install firewalld -y

systemctl start firewalld
systemctl enable firewalld
systemctl start cockpit
systemctl enable cockpit
firewall-cmd --add-service=cockpit
firewall-cmd --add-service=cockpit --permanent
firewall-cmd --reload
systemctl stop cockpit
cd /usr/share/cockpit
mv ovirt-dashboard/ ovirt-dashboard.backup
mount $nfs_server:$nfs_shared_folder /vagrant

ln -s /vagrant/dashboard/dist/ ovirt-dashboard

systemctl start cockpit

SCRIPT

# check if ovirt_release env is defined and integer
# if not defined just use master
if ENV['ovirt_release'].instance_of? Integer then
  ovirt_release = ENV['ovirt_release']
else
  ovirt_release = '-master'
end


Vagrant.configure("2") do |config|
  config.vm.provision "shell", inline: $script , env: {
    "nfs_server" => ENV['bridge_ip_address'],
    "nfs_shared_folder" => ENV['nfs_export_path'] ,
    "ovirt_release" => ovirt_release ,
  }
end
