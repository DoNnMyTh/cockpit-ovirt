#!/bin/bash

# Build cockpit-ovirt.rpm on top of master branch (https://github.com/mareklibra/cockpit-ovirt/)

# Requires:
#	yum install git nodejs @development-tools rpmdevtools

SPEC_FILE=./cockpit-ovirt.local.spec
RELEASE_VERSION=`grep '^Version:' ${SPEC_FILE}|sed 's/Version:[[:blank:]]*//'`
echo Going to build release \'${RELEASE_VERSION}\' based on recent master

GIT_REPO=https://github.com/mareklibra/cockpit-ovirt.git
SRC_DIR=cockpit-ovirt
DIST_DIR=dist
RPMBUILD_DIR=~/rpmbuild

RELEASE_DIR=cockpit-ovirt-${RELEASE_VERSION}/
TGZ_PCKG=cockpit-ovirt-${RELEASE_VERSION}.tar.gz
RPM_SOURCES=${RPMBUILD_DIR}/SOURCES/
RPM_SPECS=${RPMBUILD_DIR}/SPECS/
RPM_FILE_PREFIX=${RPMBUILD_DIR}/RPMS/noarch/cockpit-ovirt-${RELEASE_VERSION}
SRPM_FILE_PREFIX=${RPMBUILD_DIR}/SRPMS/cockpit-ovirt-${RELEASE_VERSION}

# Download sources
function getSources {
	echo Getting sources from ${GIT_REPO} ...

	# TODO: when project grows, download ZIP instead of git clone
	# https://github.com/mareklibra/cockpit-ovirt/archive/master.zip
	git clone ${GIT_REPO}
}

# Clean after build
function cleanUp {
	echo Build finished, clean up ...

	echo PWD: `pwd`
	echo Going to 'rm -r' ${SRC_DIR}
	rm -rf ${SRC_DIR}
}

# JavaScript compilation, produce the 'dist' dir
function buildJS {
	echo Building JavaScript app ...

	cd ${SRC_DIR}

	npm i && \
	npm run build

	cd -
}

# Produce .tar.gz from the 'dist'
function release {
	echo Building release .tar.gz ...

	cd ${SRC_DIR}

	echo DIST_DIR: ${DIST_DIR}
	echo RELEASE_DIR: ${RELEASE_DIR}
	echo TGZ_PCKG: ${TGZ_PCKG}

	mv ${DIST_DIR} ${RELEASE_DIR} && \
	tar -czf ${TGZ_PCKG} ${RELEASE_DIR} && \
	mv ${TGZ_PCKG} ${RPM_SOURCES}

	cd -
}

# Prepare input and run rpmbuild
function buildRpm {
	echo Building RPMs ...

	cp ${SPEC_FILE} ${RPM_SPECS}

	cd ${RPM_SPECS}
	rpmbuild -ba ${SPEC_FILE}
	cd -
}


function mvResult {
	echo Moving produced packages ...

	mv ${RPM_FILE_PREFIX}* ./
	mv ${SRPM_FILE_PREFIX}* ./
	mv ${RPM_SOURCES}/${TGZ_PCKG} ./
}

#################
rpmdev-setuptree

getSources
buildJS

release
buildRpm
mvResult

cleanUp
